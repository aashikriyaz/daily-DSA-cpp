class Solution {
public:
    int min_day(vector<int>& bloomDay,int n,int k,int mid){
        int count=0;
        int bouquets = 0;
        for(int i=0;i<n;i++){
            if(bloomDay[i]<=mid){
                count++;
                if(count==k){
                    bouquets++;
                    count=0;
                }

            }else{
                count = 0;
            }
        }
     return bouquets;
    }
    int minDays(vector<int>& bloomDay, int m, int k) {
        int n = bloomDay.size();
        int low = *min_element(bloomDay.begin(),bloomDay.end());
        int high = *max_element(bloomDay.begin(),bloomDay.end());
        if((long long)n < (long long)k*m) return -1;
        int ans = high;
        while(low<=high){
            int mid = low+(high-low)/2;
            if(min_day(bloomDay,n,k,mid)>=m){
                ans=mid;
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return ans;
    }
};
